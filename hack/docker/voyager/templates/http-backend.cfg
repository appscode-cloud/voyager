{{- range $path := .Paths }}

{{- if $path.Backend.Auth }}
{{ template "userlist.cfg" $path.Backend.Auth }}
{{ end }}

backend {{ $path.Backend.Name }}
    {{- if .Limit }}
    {{- if ne .Limit.Rate 0 }}
    tcp-request inspect-delay 2s
    stick-table type ip size 1m expire 5m store http_req_rate({{ .Limit.TimeSecond }}s)
    acl __mark_as_overload__ sc1_http_req_rate gt {{ .Limit.Rate }}
    tcp-request content track-sc1 src
    tcp-request content reject if __mark_as_overload__
    {{ end -}}
    {{ end }}

	{{- if $path.Backend.Auth }}
	{{- range $name, $users := $path.Backend.Auth.Users }}
	acl __auth_ok__  http_auth({{ $name -}})
	{{ end -}}
	http-request auth {{ if not $path.Backend.Auth.Realm }}realm "{{ $path.Backend.Auth.Realm }}" {{ end }}if !__auth_ok__
	{{ end }}

	{{ if $path.Backend.Sticky }}cookie {{ $path.Backend.StickyCookieName }} insert indirect nocache{{- end -}}
	{{- range $rule := $path.Backend.BackendRules }}
	{{ $rule -}}
	{{ end }}

	{{- range $rule := $path.Backend.RewriteRules }}
	reqrep {{ $rule -}}
	{{ end }}

	{{- range $index, $rule := $path.Backend.HeaderRules }}
	acl ___header_x_{{ $index }}_exists req.hdr({{ $rule | header_name }}) -m found
	http-request add-header {{ $rule }} unless ___header_x_{{ $index }}_exists
	{{- end }}

	{{- range $index, $e := $path.Backend.Endpoints }}
	{{- if $e.ExternalName }}
	{{- if $e.UseDNSResolver }}
	server {{ $e.Name }} {{ $e.ExternalName }}:{{ $e.Port -}} {{ if $e.DNSResolver }} {{ if $e.CheckHealth }} check {{ end }} resolvers {{ $e.DNSResolver }} resolve-prefer ipv4 {{ end -}} {{ if $e.TLSOption }} {{ $e.TLSOption }} {{ end -}}
	{{- else if not $path.Backend.BackendRules }}
	http-request redirect location {{ if $.OffloadSSL }}https://{{ else }}http://{{ end }}{{$e.ExternalName}}:{{ $e.Port }} code 301
	{{- end }}
	{{- else }}
	server {{ $e.Name }} {{ $e.IP }}:{{ $e.Port -}} {{ if $e.MaxConnections }} maxconn {{ $e.MaxConnections }} {{ end -}} {{ if $e.Weight }} weight {{ $e.Weight }} {{ end -}} {{ if $path.Backend.Sticky }} cookie {{ backend_hash $e.Name $index $path.Backend.StickyCookieHash }} {{ end -}} {{ if $e.TLSOption }} {{ $e.TLSOption }} {{ end -}}
	{{ end -}}
	{{ end }}
{{ end -}}

