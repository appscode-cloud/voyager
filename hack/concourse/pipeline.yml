resource_types:
#check for pr
- name: pull-request
  type: docker-image
  source:
    repository: tahsin/git-pull-resource
    tag: 1.0.0

#notify on slack
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:
#fetch kubeconfig file from s3 bucket
- name: kubeconfig
  type: s3
  source:
    bucket: kubeconfig-concourse
    access_key_id: ((s3-access-key))
    secret_access_key: ((s3-secret))
    regexp: kubeconfig-(.*).zip

#source-code
- name: voyager
  type: git
  source:
    uri: https://github.com/tahsinrahman/voyager
    branch: master

#checks for prs
- name: pull-request
  type: pull-request
  source:
    owner: tahsinrahman
    repo: voyager
    label: ok-to-test
    org: appscode
    access_token: ((access_token))

#resource for slack notification
- name: notify
  type: slack-notification
  source:
    url: ((slack-webhook))


jobs:
- name: e2e-test-voyager
  plan:
  - get: voyager
    trigger: true
  - get: kubeconfig
    params:
      unpack: true
  - task: run-e2e-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: tahsin/voyager-e2e-test
          tag: 0.0.1
      inputs:
      - name: voyager
      - name: kubeconfig
      outputs:
      - name: test_result

      run:
        path: voyager/hack/concourse/test.sh
    ensure:
      put: notify
      params:
        username: ghost
        silent: true
        text_file: test_result/message

- name: e2e-test-voyager-pr
  plan:
  - get: pull-request
    trigger: true
    version: every
  - get: kubeconfig
    params:
      unpack: true
  - task: run-e2e-test-pr
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: tahsin/voyager-e2e-test
          tag: 0.0.1
      inputs:
      - name: pull-request
      - name: kubeconfig
      outputs:
      - name: test_result

      run:
        path: pull-request/hack/concourse/test_pr.sh
    on_success:
      do:
      - put: pull-request
        params:
          path: pull-request
          status: success
      - put: notify
        params:
          username: ghost
          silent: true
          text_file: test_result/message
    on_failure:
      do:
      - put: pull-request
        params:
          path: pull-request
          status: failure
      - put: notify
        params:
          username: ghost
          silent: true
          text_file: test_result/message
